(ns genetic-byte-beats.forms.erlehmann
  (:require [genetic-byte-beats.parsing :as parsing]))

(def forms-strs
  ["t*2&(t<<2^t>>6) | t*4&(t<<2^t>>7) | t*6&(t<<2^t>>8)"
   "t*2&(t<<3^t>>6) | t*4&(t<<3^t>>7) | t*6&(t<<3^t>>8)"
   "(((t>>4)&(int)(512 * sin(6*t&(int)(t/512)))) >> t) | t&(t>>11)%63"
   "((t&512)>>(int)(3*sin(t*4&(int)(t/256)))) >> (t>>18) | ((t&512)>>(int)(4*sin(t*4&(int)(t/512)))) >> (t>>27)"
   "t * ((t&512)>>(int)(3*sin(t*4&t/256)) ^ ((t&512)>>(int)(4*sin(t*4&t/512)))) >> (t&512)"
   "((t&512)>>(int)(3*(sin(t*4&(int)(t/512))))) | ((t&512)>>(int)(3*(tan(t*6&(int)(t/512))))) >> (t<<9)"
   "t * ((t&512)>>(int)(3*sin(t*4&(int)(t/256)))) >> (t&512) ^ ((t&512)>>(int)(4*sin(t*4&(int)(t/512))))"
   "t*6 & ((t/12>>3|t<<4)) | ((t/6>>7+(int)(sin(t%8))|t<<2))"
   "t*6 & (t>>7|(int)(t*3.5)<<2) | t*4 & ((t>>8|(int)(t*1.5)<<2)) | t*4 & (((int)(t/1.5)>>7)^((int)(t/3)>>8)^((int)(t/6)>>9))"
   "t*6 & ((t>>7) | (t>>8) & (t<<4) & (t<<5)) | t*2 & ((t/3>>8) | (t<<4))"
   "t*6 & ((t>>7) | (t>>8) & (t<<4) & (t<<5)) | t*4 & ((t/6>>7) & (t<<3))"
   "t*6 & ((t/3>>7) | (t/6>>8) & (t<<4) & (t<<5)) | t*4 & ((t/3>>8) & (t<<4))"
   "t*6&((t>>8|t<<4)) ^ t*4&((t>>7|t<<3)) ^ t*2&((t>>6|t<<2))"
   "((((int)(t/6)>>7&t) + (t<<4)) & (((int)(t/3)>>8&t) + (t<<3)))"
   "(((int)(t/12)>>8&t) - (t<<4)) & (((int)(t/6)>>6&t) + (t<<2))"
   "(t*8 & (t/24>>5|t<<2)) | (t*6 & (t/18>>4|t<<3)) | (t*4 & (t/12>>3|t<<4))"
   "t*(t>>7)&7"
   "t>>5|t<<7"
   "((t>>7)* 0xff) * (t & 0xff)/32 & (t / 127)"
   "t%60>>(t>>40)"
   "(t>>6)*6"
   "(t>>7)%80"
   "(t>>8)&23"
   "(t>>9)^13"
   "((t<<1)^((t<<1)+(t>>7)&t>>12))|t>>(4-(1^7&(t>>19)))|t>>7"
   "0xFEFE%(t<<6&t>>6)*t*6"
   "0xFEFE%(t>>9|11)&t"
   "t*4&(t>>8|(int)(t/1.25)>>11|(int)(t/2.5)>>11|t/5>>11)&16"
   "t*4&(t>>8|t>>11)&16"
   "t*3 & (t/12>>6|t%3)%24 | (t>>8+(int)(sin(t)))&23 | (t&(t/4>>11)%63) >> (t*3&(t>>11)%127)"
   "t*3 & (t/12>>8|t%3)%24 | (t>>8)&19  | (t>>8)&19 >> (t&(t/2>>11)%63) >> (t*3&(t>>7&t + t<<11))"
   "((t>>4)|(t<<4)&0x11111+t/1000)"
   "t&(t<<2)"
   "t&(t<<3)"
   "t&(t<<4)"
   "t&(t<<5)"
   "t&(t<<6)"
   "(int)(t*sin(t+((t-1))))>>3"
   "t*sin(t+((t-1)%80))"
   "(int)(t*sin(t)*t)&(t>>8)"
   "((t/6>>11)^(t/6>>8)&(t/6>>7)*t)"
   "(t/12>>8)&(t/6>>7)*t"
   "(t/12>>9)&(t/6>>7)*t"
   "t&(t>>10)"
   "t&(t>>11)"
   "t&(t>>12)"
   "t&(t>>7)"
   "t&(t>>8)"
   "t&(t>>9)"
   "((t*9 & t>>4) | (t*5 & t>>7) | (t*3 & t/0x400)) -1"
   "t"
   "(t&0xF)*((0-t)&0xF)*(((t&0x10)>>3)-1)*0x80/0x41+0x80"
   "(t%256<128)*0xff"
   "(t>>8|t-2)&(2-t|8<<t)"])

(def forms
  (map parsing/ast-from-string forms-strs))